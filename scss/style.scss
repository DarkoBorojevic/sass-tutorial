@use "variables" as var;
@use "base";
@use "mixins" as mix;
@use "lists";


body {
  background-color: var.$bg;
}

a {
  font-weight: 500;
  text-decoration: inherit;
}

a:hover {
  color: #535bf2;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
  /* redefining the primary color varibale */
  /* $primary-color: skyblue !global; */
  color: var.$primary-color;
}

div {
  color: #535bf2;
}

p {
  color: var.$secondary-color;
}

/* nesting */
.box {
  padding: 2em;
  background-color: #fff;
  p {
    margin-top: 84px;
  }
  h2 {
    color: var.$warning-color;
  }
}

/* using the parent selector */
.card {
  /* these values will be shared between lower elements using @extend */
  padding: 4em;

  &:hover {
    @extend .card;
    background-color: #900;
    color: #fff;
    cursor: pointer;
  }

  &-primary {
    @extend .card;
    background-color: #4ac5e9;
    color: #fff;
  }
}

/* using the mixins */
.myButton {
  @include mix.myBtn(#888, #000);

  &-new {
    @extend .myButton;
    background-color: orange;
  }
}

/* mixin using interpolation */
@include mix.myNewBtn("-primary");

.read-the-docs {
  color: #888;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}

button:hover {
  border-color: #646cff;
}

button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

/* placeholders */
%span {
  background-color: blueviolet;
  color: #fff;
  display: inline-block;
  margin: 4em 4em;
  padding: 2em;
  min-width: 224px;
}

.span-primary {
  @extend %span;
  background-color: chartreuse;
}

.span-secondary {
  @extend %span;
  background-color: #213547;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

 
